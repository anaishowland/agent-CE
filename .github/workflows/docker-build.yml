name: Build and Push Docker Image (simple)

on:
  # pull_request:
  #   branches:
  #     - 'main'
  # workflow_dispatch:
  # schedule:
  #   - cron: '0 0 * * 1-5' # every day at midnight on weekdays

env:
  PROJECT_ID: YOUR_GCP_PROJECT_ID  # Replace with your GCP project ID
  GAR_REGION: us-central1           # Replace with your preferred region
  GAR_REPOSITORY: agents            # Replace with your Artifact Registry repository name
  IMAGE_NAME: neurosim-base

jobs:
  dockerize-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_REGION }}-docker.pkg.dev --quiet

      - name: Make build script executable
        run: chmod +x ./neurosim-docker.sh

      - name: Build Docker image via script
        run: |
          set -euo pipefail
          export GOOGLE_APPLICATION_CREDENTIALS="$GOOGLE_GHA_CREDS_PATH"
          ./neurosim-docker.sh | cat

      - name: Tag and push image (latest only)
        run: |
          docker tag "${IMAGE_NAME}" "${GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${GAR_REPOSITORY}/${IMAGE_NAME}:latest"
          docker push "${GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${GAR_REPOSITORY}/${IMAGE_NAME}:latest"

  build-agents:
    needs: dockerize-and-deploy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: anthropic-cua
            dir: AnthropicEvaluation
            dockerfile: AnthropicEvaluation/Dockerfile
          - name: browser-use
            dir: BrowseruseEvaluation
            dockerfile: BrowseruseEvaluation/Dockerfile
          - name: notte
            dir: NotteEvaluation
            dockerfile: NotteEvaluation/Dockerfile
          - name: openai-cua
            dir: OpenaiEvaluation
            dockerfile: OpenaiEvaluation/Dockerfile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_REGION }}-docker.pkg.dev --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare Dockerfile with pinned base image
        run: |
          FULL_BASE="${GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${GAR_REPOSITORY}/${IMAGE_NAME}:latest"
          TMP_FILE="${{ matrix.dockerfile }}.gh-tmp"
          cp "${{ matrix.dockerfile }}" "$TMP_FILE"
          sed -i -E "s#^(FROM[[:space:]]+)neurosim-base(:latest)?([[:space:]]|$)#\1${FULL_BASE}\3#I" "$TMP_FILE"
          echo "DOCKERFILE_TMP=$TMP_FILE" >> $GITHUB_ENV

      - name: Build and push agent image (with cache)
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.dir }}
          file: ${{ env.DOCKERFILE_TMP }}
          push: true
          tags: ${{ env.GAR_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ matrix.name }}:latest
          cache-from: type=gha,scope=${{ matrix.name }} 
          cache-to: type=gha,mode=max,scope=${{ matrix.name }}
